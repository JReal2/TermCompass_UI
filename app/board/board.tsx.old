'use client';

import { useEffect, useState } from "react";
import { useRouter, useSearchParams } from "next/navigation";
import Layout from '../components/Layout';
import Link from 'next/link';
import BoardBar from "@/app/components/BoardBar";
//db에서 데이터를 연동해야할곳

const dummyPosts = Array.from({ length: 500 }, (_, i) => ({
    id: i + 1,
    title: `${i + 1} 번째 게시글`,
    author: `작성자 ${i + 1}`,
    date: `2025-01-${String(i + 1).padStart(2, '0')}`,
    link: `/board/${i + 1}`,
    detail: `내용 ${1+i}`
}));

export default function BoardPage() {
    const postsPerPage = 10;
    const totalPages = Math.ceil(dummyPosts.length / postsPerPage);

    const router = useRouter();
    const searchParams = useSearchParams();
    const [currentPage, setCurrentPage] = useState(
        Number(searchParams.get("page")) || 1
    );

    useEffect(() => {
        const pageFromURL = Number(searchParams.get("page"));
        if (pageFromURL && pageFromURL !== currentPage) {
            setCurrentPage(pageFromURL);
        }
    }, [searchParams, currentPage]);

    const currentPosts = dummyPosts.slice(
        (currentPage - 1) * postsPerPage,
        currentPage * postsPerPage
    );

    const handlePageChange = (page: number) => {
        const params = new URLSearchParams(window.location.search);
        params.set("page", page.toString());
        router.push(`/board?${params.toString()}`);
        setCurrentPage(page);
    };


    return (
        <Layout>
            <div className="relative w-full h-[200px] overflow-hidden">
                {/* 배경 이미지 */}
                <div
                    className="absolute inset-0 w-full h-full bg-cover bg-center filter blur-md"
                    style={{backgroundImage: "url('/board_img.jpg')"}}
                ></div>

                {/* 텍스트 콘텐츠 */}
                <div className="absolute inset-0 flex items-center justify-center">

                    <div className="flex flex-col items-center">
                        <h1 className="font-custom text-white text-6xl font-bold mb-4">공지사항</h1>
                        <div className="flex items-center space-x-4 px-4 py-2 rounded-lg">
                            <a href="/" className="hover:opacity-80 transition-opacity">
                                <img src="/ic_sub_nav_home.png" alt="Home" className="w-6 h-6"/>
                            </a>
                            <div className="flex items-center space-x-2">
                                <span className="text-gray-500 text-lg">&gt;</span>
                                <span className="text-gray-700 text-xl font-semibold">게시판</span>
                                <span className="text-gray-500 text-lg">&gt;</span>
                                <span className="text-gray-900 text-xl font-semibold">공지사항</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div
                className="flex items-center font-  space-x-4 px-4 py-2 mx-auto rounded-lg mt-2 text-4xl justify-center mr-[32%]">
                소통창구
            </div>

            <div className="container mx-auto px-4 py-8 flex">

                {/* 메인 콘텐츠 */}
                <div className="flex-grow">
                    <table className="w-full max-w-5xl  border-collapse border-t-4 border-b border-gray-300 mx-auto">
                        <thead className="bg-gray-100">
                        <tr>
                            <th className="px-4 py-2 border-t border-b border-gray-300 font-bold w-1/12">번호</th>
                            <th className="px-4 py-2 border-t border-b border-gray-300 font-bold w-6/12">제목</th>
                            <th className="px-4 py-2 border-t border-b border-gray-300 font-bold w-2/12">작성자</th>
                            <th className="px-4 py-2 border-t border-b border-gray-300 font-bold w-2/12">작성일</th>
                        </tr>
                        </thead>
                        <tbody>
                        {currentPosts.map((post) => (
                            <tr key={post.id} className="hover:bg-gray-50">
                                <td className="px-4 py-2 border-t border-b border-gray-300 text-center">{post.id}</td>
                                <td className="px-4 py-2 border-t border-b text-left">
                                    <Link href={`/board/${post.id}`} className=" hover:underline">
                                        {post.title}
                                    </Link>
                                </td>
                                <td className="px-4 py-2 border-t border-b text-center">{post.author}</td>
                                <td className="px-4 py-2 border-t border-b text-center">{post.date}</td>
                            </tr>
                        ))}
                        </tbody>
                    </table>


                    {/* 페이지네이션 */}
                    <div className="flex justify-center mt-4">
                        <ul className="flex space-x-2 items-center">
                            {/* 이전 5페이지 버튼 */}
                            <li>
                                <button
                                    onClick={() => handlePageChange(Math.max(currentPage - 5, 1))}
                                    className={`px-4 py-2 border ${
                                        currentPage <= 5
                                            ? "bg-gray-300 text-gray-500 cursor-not-allowed"
                                            : "bg-white text-gray-700 hover:bg-blue-100"
                                    }`}
                                    disabled={currentPage <= 5} // 처음 5페이지 이하에서 비활성화
                                >
                                    &lt; 이전
                                </button>
                            </li>

                            {/* 페이지 번호 */}
                            {Array.from({length: totalPages}, (_, i) => i + 1)
                                .slice(
                                    Math.floor((currentPage - 1) / 5) * 5, // 현재 페이지 기준으로 5의 배수 페이지 그룹 시작
                                    Math.min(
                                        Math.floor((currentPage - 1) / 5) * 5 + 5, // 현재 그룹의 마지막 페이지 번호
                                        totalPages
                                    )
                                )
                                .map((page) => (
                                    <li key={page}>
                                        <button
                                            onClick={() => handlePageChange(page)}
                                            className={`px-4 py-2 border ${
                                                currentPage === page
                                                    ? "bg-gray-700 text-white"
                                                    : "bg-white text-gray-700"
                                            } hover:bg-blue-100`}
                                        >
                                            {page}
                                        </button>
                                    </li>
                                ))}

                            {/* 다음 5페이지 버튼 */}
                            <li>
                                <button
                                    onClick={() =>
                                        handlePageChange(
                                            Math.min(currentPage + 5, totalPages)
                                        )
                                    }
                                    className={`px-4 py-2 border ${
                                        currentPage + 5 > totalPages
                                            ? "bg-gray-300 text-gray-500 cursor-not-allowed"
                                            : "bg-white text-gray-700 hover:bg-blue-100"
                                    }`}
                                    disabled={currentPage + 5 > totalPages} // 마지막 페이지 그룹에서 비활성화
                                >
                                    다음 &gt;
                                </button>
                            </li>
                        </ul>
                    </div>


                </div>

                {/* 우측 메뉴바 */}
                <BoardBar>
                </BoardBar>
            </div>
        </Layout>
    );
}
